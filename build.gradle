plugins {
    id 'java'
    id 'application'
    id 'org.javamodularity.moduleplugin' version '1.8.12'
    id 'org.openjfx.javafxplugin' version '0.0.13'
    id 'org.beryx.jlink' version '2.25.0'
}

group 'org.nico.quoted'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

ext {
    junitVersion = '5.9.2'
}

sourceCompatibility = '19'
targetCompatibility = '19'

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
}

application {
    mainModule = 'org.nico.quoted'
    mainClass = 'org.nico.quoted.Launcher'
}

javafx {
    version = '19'
    modules = ['javafx.controls', 'javafx.fxml']
}

dependencies {
    // https://mvnrepository.com/artifact/org.slf4j/slf4j-log4j12
    implementation 'org.slf4j:slf4j-log4j12:2.+'

    implementation ('org.hibernate.orm:hibernate-core:6.1.7.Final')
    implementation 'jakarta.persistence:jakarta.persistence-api:3.1.0'
    implementation 'org.postgresql:postgresql:42.3.+'
    implementation 'net.bytebuddy:byte-buddy:1.14.1'
    implementation 'org.hibernate.common:hibernate-commons-annotations:6.0.6.Final'
    implementation 'com.fasterxml:classmate:1.5.1'
    implementation ('jakarta.xml.bind:jakarta.xml.bind-api:4.0.0')

    // Lombok
    compileOnly 'org.projectlombok:lombok:1.18.+'
    annotationProcessor 'org.projectlombok:lombok:1.18.+'
    testCompileOnly 'org.projectlombok:lombok:1.18.+'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.+'

    // Apache HTTP Client
    implementation 'org.apache.httpcomponents:httpclient:4.5'
    implementation 'org.apache.httpcomponents.core5:httpcore5:5.2.1'

    // Gson
    // https://mvnrepository.com/artifact/com.google.code.gson/gson
    implementation 'com.google.code.gson:gson:2.10.1'



    // Junit 5
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.+'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.+'

    // https://mvnrepository.com/artifact/org.mockito/mockito-core
    testImplementation 'org.mockito:mockito-core:5.3.+'
}

test {
    useJUnitPlatform()
}

jlink {
    forceMerge('slf4j') // Mitigates error when creating merged module, see https://github.com/beryx/badass-jlink-plugin/issues/172#issuecomment-770213446

    imageZip = project.file("${buildDir}/distributions/app-${javafx.platform.classifier}.zip")
    options = ['--strip-debug', '--compress', '2', '--no-header-files', '--no-man-pages']

    launcher {
        name = 'app'
    }
}

jlinkZip {
    group = 'distribution'
}

// To produce a 'fat' jar, use the following configuration:
//jar {
//
//    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
//
//    manifest {
//        attributes 'Main-Class': application.mainClass
//    }
//
//    from {
//        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
//    }
//}